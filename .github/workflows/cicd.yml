name: aws eb cicd test
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - run: ls -al; echo $PWD

    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Grant execute permission for gradlew
      run: chmod +x ./demo/gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: demo
    - run: ls -al ./demo/build/libs

    - name: zip artifact
      run: |
        cd ./demo/build/libs
        zip -r -q ../../../artifact.zip .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: ./artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: develop-test
    # concurrency: ...

    env:
      BUCKET: gh-action-s3-upload-test
      # APPLICATION: miricanvas-api 
      # ENVIRONMENT: yhpark01-test-develop
      FILENAME: artifact-${{ github.ref_name }}-${{ github.run_number }}.zip
      BUCKET_FOLDER_PATH: path

    steps:
    - name: set aws credential
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: artifac download
      uses: actions/download-artifact@v3
      with:
        name: build-artifact

    - name: S3 uplaod
      run: aws s3 cp artifact.zip s3://${{ env.BUCKET }}/${{ env.BUCKET_FOLDER_PATH }}/${{ env.FILENAME }}

    # - name: aws eb deploy test
    #   run: |
    #     aws elasticbeanstalk create-application-version \
    #       --application-name ${{ env.APPLICATION }} \
    #       --version-label ${{ env.FILENAME }} \
    #       --source-bundle S3Bucket="${{ env.BUCKET }}",S3Key="${{ env.BUCKET_FOLDER_PATH }}/${{ env.FILENAME }}"

    #     aws elasticbeanstalk update-environment \
    #       --application-name ${{ env.APPLICATION }} \
    #       --environment-name ${{ env.ENVIRONMENT }} \
    #       --version-label ${{ env.FILENAME }}