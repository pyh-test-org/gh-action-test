name: aws eb cicd test
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - run: ls -al; echo $PWD

    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11

    - name: Grant execute permission for gradlew
      run: chmod +x ./demo/gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build
      working-directory: demo
    - run: ls -al ./demo/build/libs

    - name: zip artifact
      run: |
        cd ./demo/build/libs
        zip -r -q ../../../artifact.zip .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: ./artifact.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      BUCKET: gh-action-s3-upload-test # elasticbeanstalk-ap-northeast-2-016842365394
      APPLICATION: miricanvas-api # miricanvas-api (변경해서 테스트)
      ENVIRONMENT: yhpark01-test-develop  # miricanvas-api-staging (변경해서 테스트)
      FILENAME: artifact-${{ githun.ref_name }}-${{ github.run_number }}.zip  # miricanvas-api-staging-${bamboo.deploy.release}--${bamboo.buildResultKey}.zip (변경해서 테스트)
      BUCKET_FOLDER_PATH: path1

    steps:
    - name: set aws credential
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.SECRET_REPO_API_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SECRET_REPO_API_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: artifac download
      uses: actions/download-artifact@v3
      with:
        name: build-artifact

    - name: S3 uplaod
      run: aws s3 cp artifact.zip s3://${{ env.BUCKET }}/${{ env.BUCKET_FOLDER_PATH }}/${{ env.FILENAME }}

    - name: aws eb deploy test
      run: |
        aws elasticbeanstalk create-application-version \
          --application-name ${{ env.APPLICATION }} \
          --version-label ${{ env.FILENAME }} \
          --source-bundle S3Bucket="${{ env.BUCKET }}",S3Key="${{ env.BUCKET_FOLDER_PATH }}/${{ env.FILENAME }}"

        aws elasticbeanstalk update-environment \
          --application-name ${{ env.APPLICATION }} \
          --environment-name ${{ env.ENVIRONMENT }} \
          --version-label ${{ env.FILENAME }}


# echo "aws s3 cp .temp/miricanvas-api.zip ${S3_URL}"
# aws s3 cp .temp/miricanvas-api.zip ${S3_URL}

# # create application version
# echo "aws elasticbeanstalk create-application-version \
#     --application-name ${APPLICATION} \
#     --version-label ${FILENAME} \
#     --source-bundle S3Bucket=${BUCKET},S3Key=${OBJECT_KEY}"
# aws elasticbeanstalk create-application-version \
#     --application-name ${APPLICATION} \
#     --version-label ${FILENAME} \
#     --source-bundle S3Bucket="${BUCKET}",S3Key="${OBJECT_KEY}"

# # application version change
# echo "aws elasticbeanstalk update-environment \
#     --application-name ${APPLICATION} \
#     --environment-name ${ENVIRONMENT} \
#     --version-label ${FILENAME}"
# aws elasticbeanstalk update-environment \
#     --application-name ${APPLICATION} \
#     --environment-name ${ENVIRONMENT} \
#     --version-label ${FILENAME}
